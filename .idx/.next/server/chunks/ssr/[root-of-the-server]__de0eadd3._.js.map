{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/secure-qr-code-generation.ts"],"sourcesContent":["// This file is used to generate secure QR codes for attendance tracking using time-sensitive hashing.\n\n'use server';\n\n/**\n * @fileOverview Generates time-sensitive QR codes for secure attendance tracking.\n *\n * - generateSecureQrCode - Generates a secure QR code for a given course.\n * - SecureQrCodeInput - The input type for the generateSecureQrCode function.\n * - SecureQrCodeOutput - The return type for the generateSecureQrCode function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\nimport crypto from 'crypto';\n\nconst SecureQrCodeInputSchema = z.object({\n  courseId: z.string().describe('The ID of the course for which to generate the QR code.'),\n  timestamp: z.number().describe('The timestamp for which the QR code is valid (in milliseconds).'),\n  secretKey: z.string().describe('A secret key to use for hashing.'),\n});\nexport type SecureQrCodeInput = z.infer<typeof SecureQrCodeInputSchema>;\n\nconst SecureQrCodeOutputSchema = z.object({\n  qrCodeData: z.string().describe('The data for the QR code, including the hashed information.'),\n});\nexport type SecureQrCodeOutput = z.infer<typeof SecureQrCodeOutputSchema>;\n\nexport async function generateSecureQrCode(input: SecureQrCodeInput): Promise<SecureQrCodeOutput> {\n  return secureQrCodeFlow(input);\n}\n\nconst hashQrCodeData = ai.defineTool({\n  name: 'hashQrCodeData',\n  description: 'Hashes the QR code data using SHA256 with a timestamp and secret key for security.',\n  inputSchema: SecureQrCodeInputSchema,\n  outputSchema: z.string(),\n},\nasync (input) => {\n  const {\n    courseId,\n    timestamp,\n    secretKey\n  } = input;\n\n  const dataToHash = `${courseId}-${timestamp}-${secretKey}`;\n  const hashedData = crypto.createHash('sha256').update(dataToHash).digest('hex');\n  return hashedData;\n});\n\nconst qrCodePrompt = ai.definePrompt({\n  name: 'qrCodePrompt',\n  tools: [hashQrCodeData],\n  input: {schema: SecureQrCodeInputSchema},\n  output: {schema: SecureQrCodeOutputSchema},\n  prompt: `You are tasked with generating secure QR code data for course attendance.\n\n  Use the hashQrCodeData tool to generate a secure hash based on the course ID, timestamp, and secret key.\n  The current timestamp is: {{{timestamp}}}.\n\n  The course ID is: {{{courseId}}}.\n\n  The secret key is: {{{secretKey}}}.\n\n  The hashed data from the hashQrCodeData tool call should be returned as the qrCodeData.\n  Ensure the output is a string.\n  `,\n});\n\nconst secureQrCodeFlow = ai.defineFlow(\n  {\n    name: 'secureQrCodeFlow',\n    inputSchema: SecureQrCodeInputSchema,\n    outputSchema: SecureQrCodeOutputSchema,\n  },\n  async input => {\n    const {output} = await qrCodePrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,sGAAsG;;;;;;AAItG;;;;;;CAMC,GAED;AACA;AAAA;AACA;;;;;;;AAEA,MAAM,0BAA0B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACjC;AAGA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAClC;AAGO,eAAe,qBAAqB,KAAwB;IACjE,OAAO,iBAAiB;AAC1B;AAEA,MAAM,iBAAiB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAAC;IACnC,MAAM;IACN,aAAa;IACb,aAAa;IACb,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM;AACxB,GACA,OAAO;IACL,MAAM,EACJ,QAAQ,EACR,SAAS,EACT,SAAS,EACV,GAAG;IAEJ,MAAM,aAAa,GAAG,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW;IAC1D,MAAM,aAAa,qGAAA,CAAA,UAAM,CAAC,UAAU,CAAC,UAAU,MAAM,CAAC,YAAY,MAAM,CAAC;IACzE,OAAO;AACT;AAEA,MAAM,eAAe,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IACnC,MAAM;IACN,OAAO;QAAC;KAAe;IACvB,OAAO;QAAC,QAAQ;IAAuB;IACvC,QAAQ;QAAC,QAAQ;IAAwB;IACzC,QAAQ,CAAC;;;;;;;;;;;EAWT,CAAC;AACH;AAEA,MAAM,mBAAmB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACpC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,aAAa;IACpC,OAAO;AACT;;;IAlDoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/faculty/course/%5Bid%5D/qr/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateSecureQrCode as '402651b5d426263bdefd477ab3482a04da8dd88cbd'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 389, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/faculty/course/%5Bid%5D/qr/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/faculty/course/[id]/qr/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/faculty/course/[id]/qr/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiT,GAC9U,+EACA","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/faculty/course/%5Bid%5D/qr/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/faculty/course/[id]/qr/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/faculty/course/[id]/qr/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}